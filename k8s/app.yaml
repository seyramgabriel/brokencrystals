# postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# db-service-alias.yaml
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: default
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
---
# postgres-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: default
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: seyramgabriel/brokencrystals:postgres-VERSION_TAG
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "brokencrystals"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres  # Added to prevent permission issues
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# nodejs-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:latest
        command: ['sh', '-c', '
          echo "Waiting for database to be ready...";
          until pg_isready -h db -p 5432; do 
            echo "Database is unavailable - sleeping"; 
            sleep 2; 
          done;
          echo "Database is ready!";
          ']

      containers:
      - name: nodejs
        image: seyramgabriel/brokencrystals:nodejs-VERSION_TAG
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_HOST
          value: "db"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USER
          value: "postgres"
        - name: DATABASE_PASSWORD
          value: "postgres"
        - name: DATABASE_NAME
          value: "brokencrystals"
        - name: DATABASE_URL
          value: "postgres://postgres:postgres@db:5432/brokencrystals"
        - name: MAIL_HOST
          value: "mailcatcher"
        - name: MAIL_PORT
          value: "1025"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
---

apiVersion: v1
kind: Service
metadata:
  name: nodejs
spec:
  selector:
    app: nodejs
  ports:
  - port: 80
    targetPort: 3000

---

# mailcatcher-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailcatcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailcatcher
  template:
    metadata:
      labels:
        app: mailcatcher
    spec:
      containers:
      - name: mailcatcher
        image: seyramgabriel/brokencrystals:mailcatcher-VERSION_TAG
        ports:
        - containerPort: 1080
        - containerPort: 1025
---
apiVersion: v1
kind: Service
metadata:
  name: mailcatcher
spec:
  selector:
    app: mailcatcher
  ports:
  - port: 1080
    targetPort: 1080
    name: web
  - port: 1025
    targetPort: 1025
    name: smtp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: brokencrystals
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nodejs
            port:
              number: 80