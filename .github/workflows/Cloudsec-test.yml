name: Cloudsec-test

on:
   workflow_dispatch:
    inputs:
      devsecops_action:
        type: choice
        description: select DevSecOps action
        options:
        - sast
        - deploy
        - dast
        required: true
   
permissions:
  checks: write

jobs:
  sast:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.devsecops_action == 'sast' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SAST Scan
        run: grep -r -e "password" -e "secret" -e "keys" .
      
      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker images
        run: |
          docker-compose --file=docker-compose.local.yml up -d
          docker-compose --file=docker-compose.local.yml up -d --build

      - name: Checking for images built and pulled 
        run: sudo docker images

      # Tagging the Docker images manually using docker tag command
      - name: Tag Docker images
        run: |
          docker tag brokencrystals_nodejs:latest ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:nodejs-${{ github.sha }}
          docker tag postgres:latest ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:postgres-${{ github.sha }}
          docker tag sj26/mailcatcher:latest ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:mailcatcher-${{ github.sha }}
                
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:nodejs-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:postgres-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/brokencrystals:mailcatcher-${{ github.sha }}
          

  deploy:
    runs-on: ubuntu-latest
    # needs: sast
    if: ${{ github.event.inputs.devsecops_action == 'deploy' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v1

    - name: Load AWS EKS credentials
      run: aws eks update-kubeconfig --name brokencrystals  --region us-east-2 # Change to your cluster name
  
    - name: Update Deployment Image 
      env:
         IMAGE_TAG: ${{ github.sha }}
         
      run: |
        sed -i "s/VERSION_TAG/${{ github.sha }}/g" ./k8s/app.yaml
       
    - name: Deploy to EKS
      run: kubectl apply -f k8s/  --validate=false # Path to your Kubernetes config files
  
    - name: Verify deployment
      run: kubectl rollout status deployment/githubactions-demo  # Change to your deployment resource name


  dast:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.devsecops_action == 'dast' }}
    steps:
      - name: OWASP ZAP DAST Scan
        continue-on-error: true
        run: |
          docker run --rm -v $(pwd):/zap/wrk:rw zaproxy/zap-stable zap-baseline.py -t 'https://seyramgabriel.github.io/brokencrystals/' || true
